package gov.sir.core.negocio.modelo;

import org.auriga.core.modelo.TransferObject;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;


/*
 * Generated by JDO Genie (version:3.0.0 (08 Jun 2004))
 */

/**
 * Clase que modela la informacion de círculos registrales
 */
public class Circulo implements TransferObject {
    private String idCirculo; // pk 
    private String nombre;
    private List zonasRegistrales = new ArrayList();
    private long lastNoMatricula;
    private List circuloProceso = new ArrayList(); // contains CirculoProceso  inverse CirculoProceso.circulo
    private boolean cobroImpuesto;
    private List circuloFestivos = new ArrayList(); // contains CirculoFestivo  inverse CirculoFestivo.circulo
    private List tiposPago = new ArrayList();
    private List firmas = new ArrayList(); // contains FirmaRegistradorEnhanced  inverse FirmaRegistradorEnhanced.circulo
	private String nit;
	private String printHost;
	private boolean toUpdateCobroImpuesto;
	private long lastNoMatriculaTMP;
	private int mayorExtension;
	private OficinaOrigen oficinaOrigen;
	private boolean activo=true;
	private boolean procesoMigracion=false;
	private String tipoTextoEncabezado;
    private int numeroBytesExtenso;
    private Date fechaProd;
    private int copiaImp;
    private static final long serialVersionUID = 1L;
	/** Metodo constructor por defecto  */
	
    public Circulo() {
    }

    /**
     * Retorna el identificador del círculo registral
     * @return idCirculo
     */
    public String getIdCirculo() {
        return idCirculo;
    }

    /**
     * Cambia el identificador del círculo registral
     * @param id
     */
    public void setIdCirculo(String id) {
        this.idCirculo = id;
    }

    /**
     * Retorna el nombre del círculo registral
     * @return nombre
     */
    public String getNombre() {
        return nombre;
    }

    /**
     * Cambia el nombre del círculo registral
     * @param nombre
     */
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    /**
     * Retorna la lista zonasRegistrales
     * @return List zonasRegistrales
     */
    public List getZonaRegistrales() {
        return Collections.unmodifiableList(zonasRegistrales);
    }

    /**
     * Añade una zona registral a la lista zonasRegistrales
     */
    public boolean addZonaRegistral(ZonaRegistral newZonaRegistral) {
        return zonasRegistrales.add(newZonaRegistral);
    }

    /**
     * Elimina una zona registral a la lista zonasRegistrales
     */
    public boolean removeZonaRegistral(Anotacion oldZonaRegistral) {
        return zonasRegistrales.remove(oldZonaRegistral);
    }

    /**
     * Retorna la lista circuloProceso
     * @return List circuloProceso
     */
    public List getCirculoProcesos() {
        return Collections.unmodifiableList(circuloProceso);
    }

    /**
     * Añade un CirculoProceso a la lista circuloProceso
     */
    public boolean addCirculoProceso(CirculoProceso newCirculoProceso) {
        return circuloProceso.add(newCirculoProceso);
    }

    /**
     * Elimina un CirculoProceso a la lista circuloProceso
     */
    public boolean removeCirculoProceso(CirculoProceso oldCirculoProceso) {
        return circuloProceso.remove(oldCirculoProceso);
    }
    
    /**
     * Retorna la lista circuloFestivos
     * @return List circulosFestivos
     */
    public List getCirculoFestivos() {
        return Collections.unmodifiableList(circuloFestivos);
    }

    /**
     * Añade un círculo festivo a la lista circuloFestivos
     */
    public boolean addCirculoFestivo(CirculoFestivo newCirculoFestivo) {
        return circuloFestivos.add(newCirculoFestivo);
    }

    /**
     * Elimina un círculo festivo a la lista circuloFestivos
     */
    public boolean removeCirculoFestivo(CirculoFestivo oldCirculoFestivo) {
        return circuloFestivos.remove(oldCirculoFestivo);
    }

    /**
     * Retorna la lista tiposPago
     * @return List tiposPago
     */
    public List getTiposPagos() {
        return Collections.unmodifiableList(tiposPago);
    }

    /**
     * Añade un tipo de pago a la lista tiposPago
     */
    public boolean addTiposPago(CirculoTipoPago newTiposPago) {
        return tiposPago.add(newTiposPago);
    }

    /**
     * Elimina un tipo de pago a la lista tiposPago
     */
    public boolean removeTiposPago(CirculoTipoPago oldTiposPago) {
        return tiposPago.remove(oldTiposPago);
    }

    /**
     * Retorna la lista firmas
     * @return List firmas
     */
    public List getFirmas() {
        return Collections.unmodifiableList(firmas);
    }

    /**
     * Añade una firma a la lista firmas
     */
    public boolean addFirma(FirmaRegistrador newFirma) {
        return firmas.add(newFirma);
    }

    /**
     * Elimina una firma a la lista firma
     */
    public boolean removeFirma(FirmaRegistrador oldFirma) {
        return firmas.remove(oldFirma);
    }

    /**
     * Retorna la secuencia del número de matrícula en el círculo registral
     * @return lastNoMatricula
     */
    public long getLastNoMatricula() {
        return lastNoMatricula;
    }

    /**
     * Cambia la secuencia del número de matrícula en el círculo registral
     * @param l
     */
    public void setLastNoMatricula(long l) {
        lastNoMatricula = l;
    }

    /** Indica si en la oficina de registro se cobra impuestos
     * @return cobroImpuestos
     */
    public boolean isCobroImpuesto() {
        return cobroImpuesto;
    }

    /**
     * Modifica el flag que indica si en la oficina de registro se cobra impuestos
     * @param b
     */
    public void setCobroImpuesto(boolean b) {
        cobroImpuesto = b;
    }

    /** Retorna el nit del circulo registral
	 * @return nit
	 */
	public String getNit() {
		return nit;
	}

	/** Cambia el nit del circulo registral
	 * @param string
	 */
	public void setNit(String string) {
		nit = string;
	}

	/**
	 * Retorna la dirección IP del host de impresión de la oficina de registro
	 * @return printHost
	 */
	public String getPrintHost() {
		return printHost;
	}

	/**
	 * Cambia la dirección IP del host de impresión de la oficina de registro
	 * @param string
	 */
	public void setPrintHost(String string) {
		printHost = string;
	}

	public boolean isToUpdateCobroImpuesto() {
		return toUpdateCobroImpuesto;
	}

	/**
	 * @param b
	 */
	public void setToUpdateCobroImpuesto(boolean b) {
		toUpdateCobroImpuesto = b;
	}

	/**
	 * Retorna el número de matrícula temporal en el círculo registral
	 * @return lastNoMatriculaTMP
	 */
	public long getLastNoMatriculaTMP() {
		return lastNoMatriculaTMP;
	}

	/**
	 * Cambia el número de matrícula temporal en el círculo registral
	 * @param l
	 */
	public void setLastNoMatriculaTMP(long l) {
		lastNoMatriculaTMP = l;
	}
	
	public int getMayorExtension() {
		return mayorExtension;
	}

	public void setMayorExtension(int mayorExtension) {
		this.mayorExtension = mayorExtension;
	}

	public OficinaOrigen getOficinaOrigen() {
		return oficinaOrigen;
	}

	public void setOficinaOrigen(OficinaOrigen oficinaOrigen) {
		this.oficinaOrigen = oficinaOrigen;
	}

	public boolean isActivo() {
		return activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	public boolean isProcesoMigracion() {
		return procesoMigracion;
	}

	public void setProcesoMigracion(boolean procesoMigracion) {
		this.procesoMigracion = procesoMigracion;
	}

	public String getTipoTextoEncabezado() {
		return tipoTextoEncabezado;
	}

	public void setTipoTextoEncabezado(String tipoTextoEncabezado) {
		this.tipoTextoEncabezado = tipoTextoEncabezado;
	}

	public int getNumeroBytesExtenso() {
		return numeroBytesExtenso;
	}

	public void setNumeroBytesExtenso(int numeroBytesExtenso) {
		this.numeroBytesExtenso = numeroBytesExtenso;
	}
	
	/**
	 * @return
	 */
	public Date getFechaProd() {
		return fechaProd;
	}

	/**
	 * @param date
	 */
	public void setFechaProd(Date date) {
		fechaProd = date;
	}
	
	private List circulos =  new ArrayList(); // contains BancosXCirculo  inverse BancosXCirculo.circulo

	public List getCirculos() {
		return circulos;
	}

	public void setCirculos(List circulos) {
		this.circulos = circulos;
	}
	
	public boolean addCirculo(BancosXCirculo bancoXCirculo){
		return circulos.add(bancoXCirculo);
	}
	
	public boolean removeCirculo(BancosXCirculo bancoXCirculo){
		return circulos.remove(bancoXCirculo);
	}

        public int getCopiaImp() {
            return copiaImp;
        }

        public void setCopiaImp(int copiaImp) {
            this.copiaImp = copiaImp;
        }
	
}
