package gov.sir.core.negocio.modelo;


import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

import org.auriga.core.modelo.TransferObject;

/** Clase que modela los tipos de tarifa configurados en el sistema  */
/*
 * Generated by JDO Genie (version:3.2.0beta7 (20 Sep 2004))
 */
public class TipoTarifa implements TransferObject {

    private String idTipo; // pk 
    private Date fechaCreacion;
    private List tarifas = new ArrayList(); // contains Tarifa  inverse Tarifa.tipoTarifa
    private boolean configurablePorCirculo;
    private static final long serialVersionUID = 1L;
    /** Metodo constructor por defecto  */
    
    public TipoTarifa() {
    }

    /** Retorna el identificador del tipo de tarifa  */
    
    public String getIdTipo() {
        return idTipo;
    }

    /** Modifica el identificador del tipo de tarifa  */
    
    public void setIdTipo(String idTipo) {
        this.idTipo = idTipo;
    }

    /** Retorna la fecha de creacion del registro en la base de datos  */
    
    public Date getFechaCreacion() {
        return fechaCreacion;
    }

    /** Modifica la fecha de creacion del registro en la base de datos  */
    
    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    /** Retorna la lista tarifas  */
    
    public List getTarifas() {
        return Collections.unmodifiableList(tarifas);
    }

    /** Añade una tarifa a la lista tarifas  */
    
    public boolean addTarifa(Tarifa newTarifa) {
        return tarifas.add(newTarifa);
    }

    /** Elimina una tarifa a la lista tarifas  */
    
    public boolean removeTarifa(Tarifa oldTarifa) {
        return tarifas.remove(oldTarifa);
    }

    /** Indica si el tipo de tarifa es configurable por circulo 
	 * @return
	 */
	public boolean isConfigurablePorCirculo() {
		return configurablePorCirculo;
	}

	/** Modifica el flag que indica si el tipo de tarifa es configurable por circulo 
	 * @param b
	 */
	public void setConfigurablePorCirculo(boolean b) {
		configurablePorCirculo = b;
	}

}