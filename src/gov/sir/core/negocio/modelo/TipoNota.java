package gov.sir.core.negocio.modelo;

import org.auriga.core.modelo.TransferObject;

/** Clase que modela los tipos de notas informativas y devolutivas por proceso  */
/*
 * Generated by JDO Genie (version:3.0.0 (08 Jun 2004))
 */
public class TipoNota implements TransferObject{

    private String idTipoNota; // pk 
    private String nombre;
    private Proceso proceso;
    private String visibilidad;
    private boolean devolutiva;
    private String descripcion;
    private String fase;
    private static final long serialVersionUID = 1L;
    /**
     * * @author : HGOMEZ, FPADILLA ** @change : Se agregan los campos versio y activo, con
     * sus respectivos métodos getters and setters
     * version de cada una de ellas. ** Caso Mantis : 12621
     */
    private Long version;
    private int activo;

    public int getActivo() {
        return activo;
    }

    public void setActivo(int activo) {
        this.activo = activo;
    }

    /** Metodo constructor por defecto  */
    public TipoNota() {
    }

    /** Retorna el identificador del tipo de nota informativa  */
    
    public String getIdTipoNota() {
        return idTipoNota;
    }

    /** Modifica el identificador del tipo de nota informativa  */
    
    public void setIdTipoNota(String idTipoNota) {
        this.idTipoNota = idTipoNota;
    }

    /** Retorna el nombre del tipo de nota infortmativa  */
    
    public String getNombre() {
        return nombre;
    }

    /** Modifica el nombre del tipo de nota infortmativa  */
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    /** Retorna la visibilidad del tipo de nota  */
    public String getVisibilidad() {
        return visibilidad;
    }

    /** Modifica la visibilidad del tipo de nota  */
    
    public void setVisibilidad(String visibilidad) {
        this.visibilidad = visibilidad;
    }

    /** Indica si el tipo de nota es devolutiva o informativa
	 * @return
	 */
	public boolean isDevolutiva() {
		return devolutiva;
	}


	/** Modifica el flag que indica si el tipo de nota es devolutiva o informativa
	 * @param b
	 */
	public void setDevolutiva(boolean b) {
		devolutiva = b;
	}


	/** Retorna el identificador del proceso al que pertenece el tipo de nota
	 * @return
	 */
	public Proceso getProceso() {
		return proceso;
	}

	/** Modifica el identificador del proceso al que pertenece el tipo de nota
	 * @param proceso
	 */
	public void setProceso(Proceso proceso) {
		this.proceso = proceso;
	}

	/** Retorna la descripcion del tipo de nota
	 * @return
	 */
	public String getDescripcion() {
		return descripcion;
	}

	/** Modifica la descripcion del tipo de nota
	 * @param string
	 */
	public void setDescripcion(String string) {
		descripcion = string;
	}

	/** Retorna la fase a la que pertence la nota
	 * @return
	 */
	public String getFase() {
		return fase;
	}

	/** Modifica la fase a la que pertence la nota
	 * @param string
	 */
	public void setFase(String string) {
		fase = string;
	}
         /*
                         *  @fecha 30/10/2012
                         *  @author Carlos Torres
                         *  @chage   Se agregan los metodos accesores para el atrivuto version
                         *  @mantis 12621: Acta - Requerimiento No 055_453_Notas_Devolutivas_Causales_Texto_e_Histórico
                        */
        public Long getVersion() {
            return version;
        }

        public void setVersion(Long version) {
            this.version = version;
        }

}
