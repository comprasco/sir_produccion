package gov.sir.core.negocio.modelo;

import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

import org.auriga.core.modelo.TransferObject;

/*
 * Generated by JDO Genie (version:3.2.0beta7 (20 Sep 2004))	 */

/** Clase que modela los procesos de reparto ejecutados  */

public class ProcesoReparto implements TransferObject{

    private String idProcesoReparto; // pk 
    private Date fechaCreacion;
    private Date fechaReparto;
    private Circulo circulo;
    private List repartos = new ArrayList(); // contains RepartoEnhanced  inverse RepartoEnhanced.procesoReparto
    private static final long serialVersionUID = 1L;
    /** Constructor por defecto  */
    public ProcesoReparto() {
    }

    /** Retorna el identificador del proceso de reparto  */
    public String getIdProcesoReparto() {
        return idProcesoReparto;
    }

    /** Cambia el identificador del proceso de reparto  */
    public void setIdProcesoReparto(String idProcesoReparto) {
        this.idProcesoReparto = idProcesoReparto;
    }

    /** Retorna la fecha de creación del registro en la base de datos   */
    public Date getFechaCreacion() {
        return fechaCreacion;
    }

    /** Cambia la fecha de creación del registro en la base de datos   */
    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    /** Retorna la fecha en que se ejecuta el reparto  */
    public Date getFechaReparto() {
        return fechaReparto;
    }

    /** Cambia la fecha en que se ejecuta el reparto  */
    public void setFechaReparto(Date fechaReparto) {
        this.fechaReparto = fechaReparto;
    }

    /** Retorna el identificador del círculo   */
    public Circulo getCirculo() {
        return circulo;
    }

    /** Cambia el identificador del círculo   */
    public void setCirculo(Circulo circulo) {
        this.circulo = circulo;
    }

    /** Retorna la lista repartos  */
    public List getRepartos() {
        return Collections.unmodifiableList(repartos);
    }

    /** Añade un Reparto a la lista repartos  */
    public boolean addReparto(Reparto newReparto) {
        return repartos.add(newReparto);
    }

    /** Elimina un Reparto a la lista repartos  */
    public boolean removeReparto(Reparto oldReparto) {
        return repartos.remove(oldReparto);
    }
}