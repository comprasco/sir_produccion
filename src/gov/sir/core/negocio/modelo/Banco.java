package gov.sir.core.negocio.modelo;

import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import org.auriga.core.modelo.TransferObject;

/*
 * Generated by JDO Genie (version:3.0.0 (08 Jun 2004))
 */

/**
 * Clase que modela los bancos configurados en el sistema
 */
public class Banco implements TransferObject {

    private String idBanco; // pk 
    private String nombre;
    private List sucursales = new ArrayList(); // contains Sucursal  inverse Sucursal.banco
private static final long serialVersionUID = 1L;
    /** Constructor por defecto */
    
	public Banco() {
	}

	public Banco(String idBanco, String nombre) {
		this.idBanco = idBanco;
		this.nombre = nombre;
	}

    public Banco(String codigoBanco) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

	/**
	 * Este método sobreescribe el método en Object y retorna true
	 * solo si el numero del banco es igual */
	public boolean equals(Object other) {
		if (other==null || !(other instanceof Banco)) return false;
		Banco p = (Banco) other;
		return idBanco.equals(p.idBanco);
	}

	/**
	 * Retorna el identificador del banco
	 * @return idBanco
	 */
    public String getIdBanco() {
        return idBanco;
    }

    /**
     * Cambia el identificador del banco
     * @paranm idBanco
     */
    public void setIdBanco(String idBanco) {
        this.idBanco = idBanco;
    }

    /**
     * Retorna el nombre del banco
     * @return nombre
     */
    public String getNombre() {
        return nombre;
    }

    /**
     * Cambia el nombre del banco
     * @paranm nombre
     */
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    /**
     * Retorna la lista sucursales
     * @return List sucursales
     */
    public List getSucursales() {
        return Collections.unmodifiableList(sucursales);
    }

    /**
     * Añade una sucursal a la lista sucursales
     */
    public boolean addSucursal(SucursalBanco newSucursal) {
        return sucursales.add(newSucursal);
    }

    /**
     * Elimina una sucursal de la lista sucursales
     */
    public boolean removeSucursal(SucursalBanco oldSucursal) {
        return sucursales.remove(oldSucursal);
    }
    
    private List bancos =  new ArrayList(); // contains BancosXCirculo  inverse BancosXCirculo.banco

	public List getBancos() {
		return bancos;
	}

	public void setBancos(List bancos) {
		this.bancos = bancos;
	}
    
	public boolean addbanco(BancosXCirculo bancoXCirculo){
		return bancos.add(bancoXCirculo);
	}
	
	public boolean removebanco(BancosXCirculo bancoXCirculo){
		return bancos.remove(bancoXCirculo);
	}
}