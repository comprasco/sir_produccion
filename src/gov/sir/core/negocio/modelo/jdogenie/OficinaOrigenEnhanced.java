package gov.sir.core.negocio.modelo.jdogenie;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import gov.sir.core.negocio.modelo.OficinaOrigen;


/*
 * Generated by JDO Genie (version:3.0.0 (08 Jun 2004))
 */
public class OficinaOrigenEnhanced extends Enhanced {
    private String idOficinaOrigen; // pk 
    private TipoOficinaEnhanced tipoOficina;
    private VeredaEnhanced vereda;
    private CategoriaNotariaEnhanced categoriaNotaria;
    private String numero;
    private String nombre;
	private List categorias = new ArrayList(); // contains OficinaOrigenCategoria  inverse OficinaOrigenCategoria.oficinaOrigen
	private boolean exentoDerechoNotarial;
	private String naturalezaJuridicaEntidad;
	private String direccion;
	private String telefono;
	private String encargado;
	private String email;
	private String fax;
        /*
     *  @author Carlos Torres
     *  @chage   se agrega validacion de version diferente
     *  @mantis 0013414: Acta - Requerimiento No 069_453_Código_Notaria_NC
     */
        private Long version;
        
        /*
        *  @author Fernando Padilla Velez
        *  @chage  1203.AJUSTE.VERSION.CATEGORIA.REPARTO.NOTARIAL,
        *          Se crea el campo ID_UNICO de la tabla SIR_NE_OFICINA_ORIGEN
        */
        private String idUnico;

    public OficinaOrigenEnhanced() {
    }

    public String getIdOficinaOrigen() {
        return idOficinaOrigen;
    }

    public void setIdOficinaOrigen(String idOficinaOrigen) {
        this.idOficinaOrigen = idOficinaOrigen;
    }

    public TipoOficinaEnhanced getTipoOficina() {
        return tipoOficina;
    }
    
    /**
    * 
    * @return Naturaleza Jurídica de la entidad. 
    */
    public String getNaturalezaJuridicaEntidad (){
    	return this.naturalezaJuridicaEntidad;
    }

    /**
    * 
    * @param naturaleza Naturaleza Jurídica de la entidad. 
    */
    public void setNaturalezaJuridicaEntidad (String naturaleza){
    	this.naturalezaJuridicaEntidad = naturaleza;
    }
    
    
    public void setTipoOficina(TipoOficinaEnhanced tipoOficina) {
        this.tipoOficina = tipoOficina;
    }

    public static OficinaOrigenEnhanced enhance(OficinaOrigen oo) {
        return (OficinaOrigenEnhanced) Enhanced.enhance(oo);
    }

    /**
     * @return
     */
    public String getNombre() {
        return nombre;
    }

    /**
     * @return
     */
    public String getNumero() {
        return numero;
    }

    /**
     * @param string
     */
    public void setNombre(String string) {
        nombre = string;
    }

    /**
     * @param string
     */
    public void setNumero(String string) {
        numero = string;
    }

    /**
     * @return
     */
    public VeredaEnhanced getVereda() {
        return vereda;
    }

    /**
     * @param vereda
     */
    public void setVereda(VeredaEnhanced vereda) {
        this.vereda = vereda;
    }
    
	 public List getCategorias() {
		 return Collections.unmodifiableList(categorias);
	 }

	 public boolean addCategoria(OficinaCategoriaEnhanced newCategoria) {
		 return categorias.add(newCategoria);
	 }

	 public boolean removeCategoria(OficinaCategoriaEnhanced oldCategoria) {
		 return categorias.remove(oldCategoria);
	 }
//	...

    /**
	 * @return
	 */
	public boolean isExentoDerechoNotarial() {
		return exentoDerechoNotarial;
	}

	/**
	 * @param b
	 */
	public void setExentoDerechoNotarial(boolean b) {
		exentoDerechoNotarial = b;
	}

	/**
	 * @return
	 */
	public String getDireccion() {
		return direccion;
	}

	/**
	 * @return
	 */
	public String getEmail() {
		return email;
	}

	/**
	 * @return
	 */
	public String getEncargado() {
		return encargado;
	}

	/**
	 * @return
	 */
	public String getFax() {
		return fax;
	}

	/**
	 * @return
	 */
	public String getTelefono() {
		return telefono;
	}

	/**
	 * @param string
	 */
	public void setDireccion(String string) {
		direccion = string;
	}

	/**
	 * @param string
	 */
	public void setEmail(String string) {
		email = string;
	}

	/**
	 * @param string
	 */
	public void setEncargado(String string) {
		encargado = string;
	}

	/**
	 * @param string
	 */
	public void setFax(String string) {
		fax = string;
	}

	/**
	 * @param string
	 */
	public void setTelefono(String string) {
		telefono = string;
	}
	
	
	/**
	 * Retorna la categoría en la que está clasificada una oficina origen,
	 * en el caso en el que sea una notaría.
	 * @return categoriaNotaria
	 */
	public CategoriaNotariaEnhanced getCategoriaNotaria() {
		return categoriaNotaria;
	}

	
	/**
	 * Modifica la categoría en la que está clasificada una oficina origen,
	 * @param categoriaNotaria la Categoria en la que va a ser clasificada la Notaría.
	 */	
	public void setCategoriaNotaria(CategoriaNotariaEnhanced categoriaNotaria) {
		this.categoriaNotaria = categoriaNotaria;
	}
/*
     *  @author Carlos Torres
     *  @chage   se agrega validacion de version diferente
     *  @mantis 0013414: Acta - Requerimiento No 069_453_Código_Notaria_NC
     */
    public Long getVersion() {
        return version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    public String getIdUnico() {
        return idUnico;
    }

    public void setIdUnico(String idUnico) {
        this.idUnico = idUnico;
    }
	

}
