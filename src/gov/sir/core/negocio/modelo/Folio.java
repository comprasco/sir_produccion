package gov.sir.core.negocio.modelo;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;

import org.auriga.core.modelo.TransferObject;


/*
 * Generated by JDO Genie (version:3.0.0 (08 Jun 2004)) */

/** Clase que modela la información relativa a un folio de matrícula inmobiliaria */

public class Folio implements TransferObject {
	private String idMatricula; // pk
	private String codCatastral;
	private EstadoFolio estado;
	private Complementacion complementacion;
	private String lindero;
        private String nupre;
        private String hectareas;
        private String metros;
        private String centimetros;
        private String determinaInm;
        private String privMetros;
        private String privCentimetros;
        private String consMetros;
        private String consCentimetros;
        private String coeficiente;
        private String linderosDef;
        private double avaluo;
        private Date fechaAvaluo;
        private String destEconomica;
	private TipoPredio tipoPredio;
	private ZonaRegistral zonaRegistral;
	private List anotaciones = new ArrayList(); // contains Anotacion  inverse Anotacion.folio
	private Date fechaApertura;
	private boolean definitivo;
	private int directo;
	private long lastIdDireccion;
	private long lastIdAnotacion;
	private long lastIdSalvedad;
	private Documento documento;
	private String radicacion;
	private String usuarioGrabacion;
	private String codCatastralAnterior;
	private boolean inconsistente;
	private Usuario usuarioCreacion;
        private boolean tipoCambio;
        private static final long serialVersionUID = 1L;
	/**
	 * Contiene una lista de 0 o 1 elemento con el Turno que crea al folio
	 */
	private List turnosFolio = new ArrayList(); // contains TurnoFolio  inverse TurnoFolio.folio


	/*
 * De este arreglo sólo se usa el primer elemento con el fin de saber si el folio se encuentra o no bloqueado
 */
	private List bloqueoFolio = new ArrayList(); // contains BloqueoFolio  inverse BloqueoFolio.folio
	private List direcciones = new ArrayList(); // contains Direccion  inverse Direccion.folio
	private List salvedades = new ArrayList(); // contains SalvedadFolio  inverse SalvedadFolio.folio
	private List historialEstados = new ArrayList(); // contains EstadoHistoria  inverse EstadoHistoria.folio
	private long lastIdHistorialEstados;
	private String comentario;
	private String nombreLote;
	private String circulo;

	/** Constructor por defecto */
	public Folio() {
	}

	/** Retorna el identificador del folio */
	public String getIdMatricula() {
		return idMatricula;
	}

	/** Cambia el identificador del folio */
	public void setIdMatricula(String idMatricula) {
		this.idMatricula = idMatricula!=null?idMatricula.toUpperCase():null;
	}

	/** Retorna el código catastral del folio  */
	public String getCodCatastral() {
		return codCatastral;
	}

	/** Cambia el código catastral del folio  */
	public void setCodCatastral(String codCatastral) {
		this.codCatastral = codCatastral;
	}

	/** Retorna el identificador del estado del folio  */
	public EstadoFolio getEstado() {
		return estado;
	}

	/** Cambia el identificador del estado del folio  */
	public void setEstado(EstadoFolio estado) {
		this.estado = estado;
	}

	/** Retorna el identificador de la complementación del folio  */
	public Complementacion getComplementacion() {
		return complementacion;
	}

	/** Cambia el identificador de la complementación del folio  */
	public void setComplementacion(Complementacion complementacion) {
		this.complementacion = complementacion;
	}

	/** Retorna el identificador del tipo de predio del folio */
	public TipoPredio getTipoPredio() {
		return tipoPredio;
	}

	/** Cambia el identificador del tipo de predio del folio */
	public void setTipoPredio(TipoPredio tipoPredio) {
		this.tipoPredio = tipoPredio;
	}
	/** Retorna el identificador del folio que indica el círculo y la vereda del folio */
	public ZonaRegistral getZonaRegistral() {
		return zonaRegistral;
	}

	 /** Cambia el identificador del folio que indica el círculo y la vereda del folio
	 * @param ZonaRegistral	 */
	
	public void setZonaRegistral(ZonaRegistral ZonaRegistral) {
		this.zonaRegistral = ZonaRegistral;
	}

	/** Retorna la lista anotaciones  */
	
	public List getAnotaciones() {
            /**
            * @Autor: Edgar Lora
            * @Mantis 11599
            * @Requerimiento 085_151
            */
		return anotaciones;
	}

	/** Agrega una anotacion a la lista anotaciones  */
	
	public void addAnotacion(int indice, Anotacion nueva) {
		anotaciones.add(indice, nueva);
	}
	/*
	public Anotacion setAnotacion(Anotacion an, int indice){
		return (Anotacion)anotaciones.set(indice, an);
	}*/

	/** Añade una anotación a la lista anotaciones */
	
	public boolean addAnotacione(Anotacion newAnotacione) {
		return anotaciones.add(newAnotacione);
	}

	/** Elimina una anotación a la lista anotaciones */
	
	public boolean removeAnotacione(Anotacion oldAnotacione) {
		return anotaciones.remove(oldAnotacione);
	}

	/** Retorna la lista bloqueoFolio */
	
	public List getBloqueoFolios() {
		return Collections.unmodifiableList(bloqueoFolio);
	}

	/** Añade un BloqueoFolio a la lista bloqueoFolio */
	
	public boolean addBloqueoFolio(BloqueoFolio newBloqueoFolio) {
		return bloqueoFolio.add(newBloqueoFolio);
	}

	/** Elimina un BloqueoFolio a la lista bloqueoFolio */
	
	public boolean removeBloqueoFolio(BloqueoFolio oldBloqueoFolio) {
		return bloqueoFolio.remove(oldBloqueoFolio);
	}
        public void InstanciaListaAnotaciones(){
                anotaciones = new ArrayList();
        }
	/** Retorna la lista direcciones */
	
	public List getDirecciones() {
		return direcciones;
	}

	/** Agrega una dirección a la lista direcciones */
	
	public boolean addDireccione(Direccion newDireccione) {
		return direcciones.add(newDireccione);
	}

	/** Elimina una dirección a la lista direcciones */
	
	public boolean removeDireccione(Direccion oldDireccione) {
		return direcciones.remove(oldDireccione);
	}

	/** Retorna la lista salvedades */
	public List getSalvedades() {
		return Collections.unmodifiableList(salvedades);
	}

	/** Agrega una salvedad a la lista salvedades */
	
	public boolean addSalvedade(SalvedadFolio newSalvedade) {
		return salvedades.add(newSalvedade);
	}

	/** Elimina una salvedad a la lista salvedades */
	
	public boolean removeSalvedade(SalvedadFolio oldSalvedade) {
		return salvedades.remove(oldSalvedade);
	}

	/** Retorna la información del lindero del folio
	 * @return lindero  	 */
	
	public String getLindero() {
		return lindero;
	}

	/** Cambia la información del lindero del folio
	 * @param string 	 */
	
	public void setLindero(String string) {
		lindero = string!=null?string.toUpperCase():null;
	}

    public String getNupre() {
        return nupre;
    }

    public void setNupre(String nupre) {
        this.nupre = nupre;
    }

    public String getHectareas() {
        return hectareas;
    }

    public void setHectareas(String hectareas) {
        this.hectareas = hectareas;
    }

    public String getMetros() {
        return metros;
    }

    public void setMetros(String metros) {
        this.metros = metros;
    }

    public String getCentimetros() {
        return centimetros;
    }

    public void setCentimetros(String centimetros) {
        this.centimetros = centimetros;
    }

    public String getDeterminaInm() {
        return determinaInm;
    }

    public void setDeterminaInm(String determinaInm) {
        this.determinaInm = determinaInm;
    }

    public String getPrivMetros() {
        return privMetros;
    }

    public void setPrivMetros(String privMetros) {
        this.privMetros = privMetros;
    }

    public String getPrivCentimetros() {
        return privCentimetros;
    }

    public void setPrivCentimetros(String privCentimetros) {
        this.privCentimetros = privCentimetros;
    }

    public String getConsMetros() {
        return consMetros;
    }

    public void setConsMetros(String consMetros) {
        this.consMetros = consMetros;
    }

    public String getConsCentimetros() {
        return consCentimetros;
    }

    public void setConsCentimetros(String consCentimetros) {
        this.consCentimetros = consCentimetros;
    }

    public String getCoeficiente() {
        return coeficiente;
    }

    public void setCoeficiente(String coeficiente) {
        this.coeficiente = coeficiente;
    }

    public String getLinderosDef() {
        return linderosDef;
    }

    public void setLinderosDef(String linderosDef) {
        this.linderosDef = linderosDef;
    }

    public double getAvaluo() {
        return avaluo;
    }

    public void setAvaluo(double avaluo) {
        this.avaluo = avaluo;
    }

    public Date getFechaAvaluo() {
        return fechaAvaluo;
    }

    public void setFechaAvaluo(Date fechaAvaluo) {
        this.fechaAvaluo = fechaAvaluo;
    }

    public String getDestEconomica() {
        return destEconomica;
    }

    public void setDestEconomica(String destEconomica) {
        this.destEconomica = destEconomica;
    }
    
	/** Retorna la fecha de apertura del folio
	 * @return fechaApertura
	 */
	public Date getFechaApertura() {
		return fechaApertura;
	}

	/** Cambia la fecha de apertura del folio
	 * @param date
	 */
	public void setFechaApertura(Date date) {
		fechaApertura = date;
	}

	/** Indica si el folio es definitivo o temporal
	 * @return
	 */
	public boolean isDefinitivo() {
		return definitivo;
	}

	/** Modificala marca que indica si el folio es definitivo o temporal
	 * @param b
	 */
	public void setDefinitivo(boolean b) {
		definitivo = b;
	}

	/** Retorna la secuencia de direcciones de folio
	 * @return lastIdDireccion
	 */
	public long getLastIdDireccion() {
		return lastIdDireccion;
	}

	/** Cambia la secuencia de direcciones de folio
	 * @param l
	 */
	public void setLastIdDireccion(long l) {
		lastIdDireccion = l;
	}

	/** Retorna la secuencia de anotaciones de folio
	 * @return lastIdAnotacion  	 */
	public long getLastIdAnotacion() {
		return lastIdAnotacion;
	}

	/** Retorna la secuencia de salvedades de folio
	 * @return lastIdSalvedad 	 */
	public long getLastIdSalvedad() {
		return lastIdSalvedad;
	}

	/** Cambia la secuencia de anotaciones de folio
	 * @param l 	 */
	public void setLastIdAnotacion(long l) {
		lastIdAnotacion = l;
	}

	/** Cambia la secuencia de salvedades de folio
	 * @param l	   */
	public void setLastIdSalvedad(long l) {
		lastIdSalvedad = l;
	}

	/** Retorna el identificador del documento de apertura del folio
	 * @return documento 	 */
	public Documento getDocumento() {
		return documento;
	}

	/** Cambia el identificador del documento de apertura del folio
	 * @param documento 	 */
	public void setDocumento(Documento documento) {
		this.documento = documento;
	}

	/** Retorna el número del turno que crea al folio 
	 * @return radicacion 	 */
	public String getRadicacion() {
		return radicacion;
	}

	/**
	 * @return usuarioGrabacion
	 */
	public String getUsuarioGrabacion() {
		return usuarioGrabacion;
	}

	/** Cambia el número del turno que crea al folio
	 * @param string
	 */
	public void setRadicacion(String string) {
		radicacion = string;
	}

	/**
	 * @param string
	 */
	public void setUsuarioGrabacion(String string) {
		usuarioGrabacion = string;
	}

	/** Retorna el código catastral anterior de folio 
	 * @return conCatastralAnterior
	 */
	public String getCodCatastralAnterior() {
		return codCatastralAnterior;
	}

	/** Cambia el código catastral anterior de folio 
	 * @param string
	 */
	public void setCodCatastralAnterior(String string) {
		codCatastralAnterior = string;
	}

	/** Retorna la lista turnosFolio */
	public List getTurnosFolios() {
		 return Collections.unmodifiableList(turnosFolio);
	 }

	/** Agrega un TurnosFolio a la lista turnosFolio  */
	
	 public boolean addTurnosFolio(TurnoFolio newTurnosFolio) {
		 return turnosFolio.add(newTurnosFolio);
	 }

	 /** Agrega un TurnosFolio a la lista turnosFolio  */
	 public boolean removeTurnosFolio(TurnoFolio oldTurnosFolio) {
		 return turnosFolio.remove(oldTurnosFolio);
	 }

	/** Indica si el folio esta inconsistente 
	 * @return inconsistente
	 */
	public boolean isInconsistente() {
		return inconsistente;
	}

	/** Modifica la marca que indica si el folio esta inconsistente 
	 * @param b
	 */
	public void setInconsistente(boolean b) {
		inconsistente = b;
	}

	/** Retorna el usuario que crea el folio
	 * @return usuarioCreacion
	 */
	public Usuario getUsuarioCreacion() {
		return usuarioCreacion;
	}

	/** Cambia el usuario que crea el folio
	 * @param usuario
	 */
	public void setUsuarioCreacion(Usuario usuario) {
		usuarioCreacion = usuario;
	}

	/** Retorna la lista historialEstados */
	
	public List getHistorialEstados() {
		return Collections.unmodifiableList(historialEstados);
	}

	/** Agrega un HistorialEstado a la lista historialEstado */
	
	public boolean addHistorialEstado(EstadoHistoria newHistorialEstado) {
		return historialEstados.add(newHistorialEstado);
	}

	/** Modifica un HistorialEstado a la lista historialEstado */
	
	public boolean removeHistorialEstado(EstadoHistoria oldHistorialEstado) {
		return historialEstados.remove(oldHistorialEstado);
	}

	/** Retorna la secuencia de historiales de estados de folio
	 * @return lastIdHistorialEstados	 */
	public long getLastIdHistorialEstados() {
		return lastIdHistorialEstados;
	}

	/** Cambia la secuencia de historiales de estados de folio
	 * @param l  	 */
	public void setLastIdHistorialEstados(long l) {
		lastIdHistorialEstados = l;
	}

	/** Retorna el comentario del folio
	 * @return comentario 	 */
	public String getComentario() {
		return comentario;
	}

	/** Cambia el comentario del folio
	 * @param string  */
	public void setComentario(String string) {
		comentario = string;
	}

	/** Retorna el nombre del lote del folio
	 * @return nombreLote
	 */
	public String getNombreLote() {
		return nombreLote;
	}

	/** Cambia el nombre del lote del folio
	 * @param string
	 */
	public void setNombreLote(String string) {
		nombreLote = string;
	}

	
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}

		if (!(o instanceof Folio)) {
			return false;
		}

		final Folio id = (Folio) o;

		if ((this.idMatricula != null)
				? (!idMatricula.equals(id.idMatricula))
					: (id.idMatricula != null)) {
			return false;
		}

		return true;
	}

	/** Modifica la lista direcciones
	 * @param list
	 */
	public void setDirecciones(List list) {
		direcciones = list;
	}

	/** Modifica la lista salvedades */
	
  public void setSalvedades(List salvedades) {
    this.salvedades = salvedades;
  }

  /** Modifica la lista anotaciones  */
  
  public void setAnotaciones(List anotaciones) {
    this.anotaciones = anotaciones;
  }

  /**Indica si fue creado por creacion Directa de Folio o Grabacion **/
	public int getDirecto() {
		return directo;
	}
	
	public void setDirecto(int directo) {
		this.directo = directo;
	}
	
	public String getCirculo() {
		return circulo;
	}
	
	public void setCirculo(String circulo) {
		this.circulo = circulo;
	}

        public boolean getTipoCambio() {
            return tipoCambio;
        }

        public void setTipoCambio(boolean tc) {
            this.tipoCambio = tc;
        }

}
